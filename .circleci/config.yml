---
# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_USER    - login info for docker hub
# DOCKER_PASS
version: 2.1
jobs:
  main:
    docker:
      - image: cimg/base:2024.01
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    environment:
      APP_NAME: "socorro_collector"
    steps:
      - checkout

      - setup_remote_docker:
          version: docker24
          docker_layer_caching: true

      - run:
          name: Get info
          command: |
            uname -v
            docker info

      - run:
          name: Create version.json
          # yamllint disable rule:line-length
          command: |
            # create a version.json per https://github.com/mozilla-services/Dockerflow/blob/master/docs/version_object.md
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
            "$CIRCLE_SHA1" \
            "$CIRCLE_TAG" \
            "$CIRCLE_PROJECT_USERNAME" \
            "$CIRCLE_PROJECT_REPONAME" \
            "$CIRCLE_BUILD_URL" > version.json
          # yamllint enable rule:line-length

      - run:
          name: Login to Dockerhub
          # yamllint disable rule:line-length
          command: |
            if [ "${DOCKER_USER}" == "" ] || [ "${DOCKER_PASS}" == "" ]; then
              echo "Skipping Login to Dockerhub, credentials not available."
            else
              echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
            fi
          # yamllint enable rule:line-length

      - run:
          name: Build Docker image
          command: |
            make build

      - run:
          name: Verify requirements.txt file
          command: |
            docker compose run --rm --no-deps ci shell ./bin/run_verify_reqs.sh

      - run:
          name: Lint
          command: |
            make my.env
            docker-compose run --rm --no-deps ci shell ./bin/run_lint.sh

      - run:
          name: Run tests
          command: |
            make my.env
            docker-compose up --detach --no-color \
                localstack \
                statsd \
                fakesentry
            docker-compose run --rm ci shell ./bin/run_tests.sh

      - run:
          name: Run systemtest
          command: |
            docker compose run --rm ci shell ./bin/run_setup.sh
            docker compose up --detach --wait --wait-timeout=10 ci-web
            docker compose run --rm ci shell bash -c 'cd systemtest && NGINX_TESTS=0 POST_CHECK=1 HOST=http://ci-web:8000 pytest -vv'

      - run:
          name: Run systemtest with pubsub and gcs
          command: |
            echo 'CRASHMOVER_CRASHPUBLISH_CLASS=antenna.ext.pubsub.crashpublish.PubSubCrashPublish' >> my.env
            echo 'CRASHMOVER_CRASHSTORAGE_CLASS=antenna.ext.gcs.crashstorage.GcsCrashStorage' >> my.env
            docker compose run --rm ci shell ./bin/run_setup.sh
            docker compose up --detach --wait --wait-timeout=10 ci-web
            docker compose run --rm ci shell bash -c 'cd systemtest && NGINX_TESTS=0 POST_CHECK=1 HOST=http://ci-web:8000 pytest -vv'
            # remove config on last two lines
            sed '$d' -i my.env
            sed '$d' -i my.env

      - run:
          name: Push to Dockerhub
          command: |
            bin/circleci_push.sh "local/antenna_deploy_base:latest"

workflows:
  version: 2

  build_test_push:
    jobs:
      - main:
          filters:
            tags:
              only: /.*/
